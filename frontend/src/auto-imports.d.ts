// Generated by 'unplugin-auto-import'
export {}
declare global {
  const BrowserOpenURL: typeof import('../wailsjs/runtime/runtime.js')['BrowserOpenURL']
  const EffectScope: typeof import('vue')['EffectScope']
  const Environment: typeof import('../wailsjs/runtime/runtime.js')['Environment']
  const EventsEmit: typeof import('../wailsjs/runtime/runtime.js')['EventsEmit']
  const EventsOff: typeof import('../wailsjs/runtime/runtime.js')['EventsOff']
  const EventsOn: typeof import('../wailsjs/runtime/runtime.js')['EventsOn']
  const EventsOnMultiple: typeof import('../wailsjs/runtime/runtime.js')['EventsOnMultiple']
  const EventsOnce: typeof import('../wailsjs/runtime/runtime.js')['EventsOnce']
  const Hide: typeof import('../wailsjs/runtime/runtime.js')['Hide']
  const InsertTime: typeof import('../wailsjs/go/main/App.js')['InsertTime']
  const LogDebug: typeof import('../wailsjs/runtime/runtime.js')['LogDebug']
  const LogError: typeof import('../wailsjs/runtime/runtime.js')['LogError']
  const LogFatal: typeof import('../wailsjs/runtime/runtime.js')['LogFatal']
  const LogInfo: typeof import('../wailsjs/runtime/runtime.js')['LogInfo']
  const LogPrint: typeof import('../wailsjs/runtime/runtime.js')['LogPrint']
  const LogTrace: typeof import('../wailsjs/runtime/runtime.js')['LogTrace']
  const LogWarning: typeof import('../wailsjs/runtime/runtime.js')['LogWarning']
  const Quit: typeof import('../wailsjs/runtime/runtime.js')['Quit']
  const ScreenGetAll: typeof import('../wailsjs/runtime/runtime.js')['ScreenGetAll']
  const SelectAllTime: typeof import('../wailsjs/go/main/App.js')['SelectAllTime']
  const Show: typeof import('../wailsjs/runtime/runtime.js')['Show']
  const Time: typeof import('../wailsjs/go/models')['Time']
  const WindowCenter: typeof import('../wailsjs/runtime/runtime.js')['WindowCenter']
  const WindowFullscreen: typeof import('../wailsjs/runtime/runtime.js')['WindowFullscreen']
  const WindowGetPosition: typeof import('../wailsjs/runtime/runtime.js')['WindowGetPosition']
  const WindowGetSize: typeof import('../wailsjs/runtime/runtime.js')['WindowGetSize']
  const WindowHide: typeof import('../wailsjs/runtime/runtime.js')['WindowHide']
  const WindowIsFullscreen: typeof import('../wailsjs/runtime/runtime.js')['WindowIsFullscreen']
  const WindowIsMaximised: typeof import('../wailsjs/runtime/runtime.js')['WindowIsMaximised']
  const WindowIsMinimised: typeof import('../wailsjs/runtime/runtime.js')['WindowIsMinimised']
  const WindowIsNormal: typeof import('../wailsjs/runtime/runtime.js')['WindowIsNormal']
  const WindowMaximise: typeof import('../wailsjs/runtime/runtime.js')['WindowMaximise']
  const WindowMinimise: typeof import('../wailsjs/runtime/runtime.js')['WindowMinimise']
  const WindowReload: typeof import('../wailsjs/runtime/runtime.js')['WindowReload']
  const WindowReloadApp: typeof import('../wailsjs/runtime/runtime.js')['WindowReloadApp']
  const WindowSetBackgroundColour: typeof import('../wailsjs/runtime/runtime.js')['WindowSetBackgroundColour']
  const WindowSetDarkTheme: typeof import('../wailsjs/runtime/runtime.js')['WindowSetDarkTheme']
  const WindowSetLightTheme: typeof import('../wailsjs/runtime/runtime.js')['WindowSetLightTheme']
  const WindowSetMaxSize: typeof import('../wailsjs/runtime/runtime.js')['WindowSetMaxSize']
  const WindowSetMinSize: typeof import('../wailsjs/runtime/runtime.js')['WindowSetMinSize']
  const WindowSetPosition: typeof import('../wailsjs/runtime/runtime.js')['WindowSetPosition']
  const WindowSetSize: typeof import('../wailsjs/runtime/runtime.js')['WindowSetSize']
  const WindowSetSystemDefaultTheme: typeof import('../wailsjs/runtime/runtime.js')['WindowSetSystemDefaultTheme']
  const WindowSetTitle: typeof import('../wailsjs/runtime/runtime.js')['WindowSetTitle']
  const WindowShow: typeof import('../wailsjs/runtime/runtime.js')['WindowShow']
  const WindowToggleMaximise: typeof import('../wailsjs/runtime/runtime.js')['WindowToggleMaximise']
  const WindowUnfullscreen: typeof import('../wailsjs/runtime/runtime.js')['WindowUnfullscreen']
  const WindowUnmaximise: typeof import('../wailsjs/runtime/runtime.js')['WindowUnmaximise']
  const WindowUnminimise: typeof import('../wailsjs/runtime/runtime.js')['WindowUnminimise']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module '@vue/runtime-core' {
  interface ComponentCustomProperties {
    readonly BrowserOpenURL: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['BrowserOpenURL']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly Environment: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['Environment']>
    readonly EventsEmit: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['EventsEmit']>
    readonly EventsOff: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['EventsOff']>
    readonly EventsOn: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['EventsOn']>
    readonly EventsOnMultiple: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['EventsOnMultiple']>
    readonly EventsOnce: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['EventsOnce']>
    readonly Hide: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['Hide']>
    readonly InsertTime: UnwrapRef<typeof import('../wailsjs/go/main/App.js')['InsertTime']>
    readonly LogDebug: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['LogDebug']>
    readonly LogError: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['LogError']>
    readonly LogFatal: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['LogFatal']>
    readonly LogInfo: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['LogInfo']>
    readonly LogPrint: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['LogPrint']>
    readonly LogTrace: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['LogTrace']>
    readonly LogWarning: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['LogWarning']>
    readonly Quit: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['Quit']>
    readonly ScreenGetAll: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['ScreenGetAll']>
    readonly SelectAllTime: UnwrapRef<typeof import('../wailsjs/go/main/App.js')['SelectAllTime']>
    readonly Show: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['Show']>
    readonly Time: UnwrapRef<typeof import('../wailsjs/go/models')['Time']>
    readonly WindowCenter: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowCenter']>
    readonly WindowFullscreen: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowFullscreen']>
    readonly WindowGetPosition: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowGetPosition']>
    readonly WindowGetSize: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowGetSize']>
    readonly WindowHide: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowHide']>
    readonly WindowIsFullscreen: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowIsFullscreen']>
    readonly WindowIsMaximised: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowIsMaximised']>
    readonly WindowIsMinimised: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowIsMinimised']>
    readonly WindowIsNormal: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowIsNormal']>
    readonly WindowMaximise: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowMaximise']>
    readonly WindowMinimise: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowMinimise']>
    readonly WindowReload: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowReload']>
    readonly WindowReloadApp: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowReloadApp']>
    readonly WindowSetBackgroundColour: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowSetBackgroundColour']>
    readonly WindowSetDarkTheme: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowSetDarkTheme']>
    readonly WindowSetLightTheme: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowSetLightTheme']>
    readonly WindowSetMaxSize: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowSetMaxSize']>
    readonly WindowSetMinSize: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowSetMinSize']>
    readonly WindowSetPosition: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowSetPosition']>
    readonly WindowSetSize: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowSetSize']>
    readonly WindowSetSystemDefaultTheme: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowSetSystemDefaultTheme']>
    readonly WindowSetTitle: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowSetTitle']>
    readonly WindowShow: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowShow']>
    readonly WindowToggleMaximise: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowToggleMaximise']>
    readonly WindowUnfullscreen: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowUnfullscreen']>
    readonly WindowUnmaximise: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowUnmaximise']>
    readonly WindowUnminimise: UnwrapRef<typeof import('../wailsjs/runtime/runtime.js')['WindowUnminimise']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
