//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0-rc.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "program")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    #[sea_orm(column_type = "Text")]
    pub name: String,
    #[sea_orm(column_type = "Text")]
    pub color: String,
    #[sea_orm(column_type = "Text")]
    pub path: String,
    #[sea_orm(column_type = "Text")]
    pub icon: String,
    #[sea_orm(column_type = "Text")]
    pub platform: String,
    pub sort: i64,
    pub deleted_at: i64,
    pub created_at: i64,
    pub updated_at: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::activity::Entity")]
    Activity,
    #[sea_orm(has_many = "super::dimension_program::Entity")]
    DimensionProgram,
    #[sea_orm(has_many = "super::remark::Entity")]
    Remark,
}

impl Related<super::activity::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Activity.def()
    }
}

impl Related<super::dimension_program::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DimensionProgram.def()
    }
}

impl Related<super::remark::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Remark.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
