//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0-rc.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "moment")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    #[sea_orm(column_type = "Text")]
    pub title: String,
    #[sea_orm(column_type = "Text")]
    pub content: String,
    pub box_id: i64,
    pub link_id: Option<i64>,
    pub deleted_at: i64,
    pub created_at: i64,
    pub updated_at: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::r#box::Entity",
        from = "Column::BoxId",
        to = "super::r#box::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Box,
    #[sea_orm(
        belongs_to = "super::link::Entity",
        from = "Column::LinkId",
        to = "super::link::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    Link,
}

impl Related<super::r#box::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Box.def()
    }
}

impl Related<super::link::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Link.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
